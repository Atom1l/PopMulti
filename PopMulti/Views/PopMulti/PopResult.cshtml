@model PopMulti.Models.PopModel.PopMultiModel
@{
    Layout = "_Poplayout";
    string winningUniversity = "";

    // Check for the winner
    if (Model.KMUTT >= 20)
    {
        winningUniversity = "KMUTT";
    }
    else if (Model.SU >= 20)
    {
        winningUniversity = "SU";
    }
    else if (Model.SWU >= 20)
    {
        winningUniversity = "SWU";
    }
}
<link rel="stylesheet" href="/css/PopMulti.css" asp-append-version="true" />

<div class="section-resultbox d-flex justify-content-center align-items-center gap-5">
    <div class="result-box d-flex flex-column justify-content-center align-items-center text-start shadow">
        <div class="score-header-text text-center kanit-bold">Score</div>

        <!-- Display the winner with different colors and larger font size -->
        @if (!string.IsNullOrEmpty(winningUniversity))
        {
            <div class="winner-message text-center kanit-bold"
                 style="color: @(winningUniversity == "KMUTT" ? "rgba(240,78,35,1)" : winningUniversity == "SU" ? "rgba(0,116,104,1)" : "rgba(218,33,39,1)");
                       font-size: 2.5rem; /* Adjust the font size */
                       margin-top: 20px;">
                <h2>The Winner is from</h2>
                <h1 class="text-decoration-underline">@winningUniversity</h1> <!-- Display the winner name in larger font -->
            </div>
        }

        <canvas class="canvas my-4 h-25 border border-dark" id="bar"></canvas>
        <div class="kmutt-score w-100 d-flex flex-row justify-content-between align-items-center kanit-regular"><span class="kanit-bold">KMUTT</span> <span>@Model.KMUTT</span></div>
        <div class="su-score w-100 d-flex flex-row justify-content-between align-items-center kanit-regular"><span class="kanit-bold">SU</span> <span>@Model.SU</span></div>
        <div class="swu-score w-100 d-flex flex-row justify-content-between align-items-center kanit-regular"><span class="kanit-bold">SWU</span> <span>@Model.SWU</span></div>
    </div>
</div>

<!-- Script for Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/microsoft/signalr@5.0.11/dist/browser/signalr.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script type="text/javascript">
    // Get canvas context for chart on the result page
    var chart = document.getElementById('bar').getContext('2d');

    // Initial chart setup
    var mychart = new Chart(chart, {
        type: 'bar',
        data: {
            labels: ['KMUTT', 'SU', 'SWU'],
            datasets: [{
                label: 'Pop-Multi Scores',
                data: [@Model.KMUTT, @Model.SU, @Model.SWU], // chart dataset with 3 database instance
                backgroundColor: ['rgba(240,78,35,0.5)', 'rgba(0,116,104,0.5)', 'rgba(218,33,39,0.5)'],
                borderColor: ['rgba(240,78,35,1)', 'rgba(0,116,104,1)', 'rgba(218,33,39,1)'],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    display: true,
                }
            },
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });

    // Setup SignalR connection on the result page
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/scoreHub")
        .build();

    // Start the connection
    connection.start()
        .then(() => console.log("Connected to SignalR")) // If successfully connected will show in console log with this line //
        .catch(err => console.error("SignalR Connection Error: ", err));

    // Listen for score updates
    connection.on("ReceiveScoreUpdate", function (university, newScore) {
        if (university === "KMUTT") { // Update real-time score for KMUTT
            mychart.data.datasets[0].data[0] = newScore; // KMUTT is at index 0 in dataset
            document.querySelector(".kmutt-score span:nth-child(2)").innerText = newScore;
        }
        else if (university === "SU") { // Update real-time score for SU
            mychart.data.datasets[0].data[1] = newScore;
            document.querySelector(".su-score span:nth-child(2)").innerText = newScore;
        }
        else if (university === "SWU") { // Update real-time score for SWU
            mychart.data.datasets[0].data[2] = newScore;
            document.querySelector(".swu-score span:nth-child(2)").innerText = newScore;
        }

        // Update the chart with the new data( Scores update )
        mychart.update();
    });
</script>
