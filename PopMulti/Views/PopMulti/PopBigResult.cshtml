@model PopMulti.Models.PopModel.PopMultiModel
@{
    Layout = "_Poplayout";
}
<link rel="stylesheet" href="/css/PopMulti.css" asp-append-version="true" />

<div class="section-popup d-flex justify-content-center align-items-center">
    <canvas class="canvas p-3" id="bar"></canvas>
</div>

<!-- Script for Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/microsoft/signalr@5.0.11/dist/browser/signalr.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script type="text/javascript">
    var chart = document.getElementById('bar').getContext('2d');
    var mychart = new Chart(chart, {
        type: 'bar',
        data: {
            labels: ['KMUTT', 'SU', 'SWU'],
            datasets: [{
                label: 'Pop-Multi Scores',
                data: [@Model.KMUTT, @Model.SU, @Model.SWU],
                backgroundColor: ['rgba(240,78,35,0.5)', 'rgba(0,116,104,0.5)', 'rgba(218,33,39,0.5)'],
                borderColor: ['rgba(240,78,35,1)', 'rgba(0,116,104,1)', 'rgba(218,33,39,1)'],
                borderWidth: 1,
                barPercentage: 0.6,         // ปรับขนาดความกว้างของแท่ง
                categoryPercentage: 0.8     // ควบคุมพื้นที่แสดงแท่ง
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,  // ให้กราฟปรับเต็มหน้าจอได้ตามต้องการ
            plugins: {
                legend: {
                    labels: {
                        font: {
                            size: function (context) {
                                let width = context.chart.width;
                                return width < 500 ? 12 : 30;
                            }
                        }
                    }
                },
                tooltip: {
                    bodyFont: {
                        size: function (context) {
                            let width = context.chart.width;
                            return width < 500 ? 10 : 26;
                        }
                    },
                    titleFont: {
                        size: function (context) {
                            let width = context.chart.width;
                            return width < 500 ? 12 : 28;
                        }
                    }
                }
            },
            scales: {
                x: {
                    ticks: {
                        font: {
                            size: function (context) {
                                let width = context.chart.width;
                                return width < 500 ? 10 : 26;
                            }
                        }
                    }
                },
                y: {
                    beginAtZero: true, // ให้กราฟเริ่มจาก 0
                    max: 50,           // กำหนดค่าสูงสุดตรงกับ ScoreLimit
                    ticks: {
                        stepSize: 5,   // ให้แสดงค่าขั้นบันไดทีละ 5 เพื่อดูง่ายขึ้น
                        font: {
                            size: function (context) {
                                let width = context.chart.width;
                                return width < 500 ? 10 : 26;
                            }
                        }
                    }
                }
            }
        }
    });

    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/scoreHub")
        .build();

    connection.start()
        .then(() => console.log("Connected to SignalR"))
        .catch(err => console.error("SignalR Connection Error: ", err));

    connection.on("ReceiveScoreUpdate", function (university, newScore) {
        if (university === "KMUTT") {
            mychart.data.datasets[0].data[0] = newScore;
        } else if (university === "SU") {
            mychart.data.datasets[0].data[1] = newScore;
        } else if (university === "SWU") {
            mychart.data.datasets[0].data[2] = newScore;
        }
        mychart.update();
    });
</script>